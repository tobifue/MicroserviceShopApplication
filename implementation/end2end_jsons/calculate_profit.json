{
	"info": {
		"_postman_id": "91d0f943-92bc-4a25-a7d7-aba9b949da15",
		"name": "Calculate profit",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"vendorId is set\", () => {",
							"    pm.variables.set(\"vendorId\",5);",
							"    pm.expect(\"vendorId\").to.not.be.null;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Calculate prev profit\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.collectionVariables.set((\"prev_profit\"),responseJson);",
							"    console.log(pm.variables.get(\"prev_profit\"));",
							"});",
							"",
							"pm.test(\"price is set\", () => {",
							"    pm.collectionVariables.set((\"price\"),12);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/account/{{vendorId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"account",
						"{{vendorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Format proves correct\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.itemName).to.be.a('string');",
							"    pm.expect(responseJson.txid).to.be.a('number');",
							"    pm.expect(responseJson.customerId).to.be.a('number');",
							"    pm.expect(responseJson.vendorId).to.be.a('number');",
							"    pm.expect(responseJson.date).to.have.lengthOf(29);",
							"    pm.expect(responseJson.price).to.be.a('number');",
							"    pm.expect(responseJson.quantity).to.be.a('number');",
							"});",
							"",
							"pm.test(\"vendorId is set\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.variables.set((\"vendorId\"),responseJson.vendorId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": {{price}},\n    \"vendorId\":{{vendorId}},\n    \"quantity\": \"5\",\n    \"itemName\" : \"Emporia Smart 4\",\n    \"priceRecommendation\" : \"1\",\n    \"customerId\":\"2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/history/add",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"history",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct profit calculated\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson).to.eql(pm.collectionVariables.get(\"price\")+pm.collectionVariables.get(\"prev_profit\"));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"id\", pm.variables.get(\"vendorId\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/account/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"account",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5f90d42f-243a-4518-b438-dd5e03726413",
			"key": "vendorId",
			"value": "0"
		},
		{
			"id": "e8650df5-6563-4010-8620-efe01c81edb8",
			"key": "id",
			"value": ""
		},
		{
			"id": "744b383a-4c4b-46eb-b66a-a35d50c9a25f",
			"key": "prev_profit",
			"value": ""
		},
		{
			"id": "cb916a4d-b300-4188-83f7-91598ef12abc",
			"key": "price",
			"value": ""
		}
	]
}