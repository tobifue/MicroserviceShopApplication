


stages:
  - cartTest
  - dockerBuild
  - release


cart_testing:
  tags:
    - swa
  image: node:latest
  stage: cartTest
  script:
    - cd implementation/cart/container
    - npm start --host=app &
    - npm install -g mocha
    - npm install
    - npm run test


docker:
  image: docker:latest
  tags:
    - swa
  stage: dockerBuild
  needs:
    - job: cart_testing
  services:
  - docker:dind 
  script:
    - apk add --no-cache docker-compose
    - apk add py3-pip
    - pip install --upgrade docker-compose
    - docker-compose --version
    - DOCKER_SCAN_SUGGEST=false COMPOSE_PROFILES=test docker-compose build -q --parallel
    - COMPOSE_PROFILES=test docker-compose up --abort-on-container-exit


release_upload:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: docker
  rules:
    - if: '$RELEASE == "True"'
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - release-cli create --name="My Release" --description="My Release description" --tag-name job-$CI_JOB_ID 

